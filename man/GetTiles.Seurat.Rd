% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_ui.R
\name{GetTiles.Seurat}
\alias{GetTiles.Seurat}
\title{Applies Tessera on a Seurat object}
\usage{
\method{GetTiles}{Seurat}(
  obj,
  spatial,
  embeddings = NULL,
  assay = NULL,
  raw_results = FALSE,
  tile.id.name = "tile_id",
  reduction.name = "pca",
  graph.name = "tile_adj",
  add.isolated.cells = TRUE,
  ...
)
}
\arguments{
\item{obj}{Seurat object with spatial coordinates (and optionally, pre-computed
single cell embeddings) stored as dimensional reductions.}

\item{spatial}{Name of dimensional reduction where the cells' x/y coordinates are stored.}

\item{embeddings}{Name of dimensional reduction where pre-computed single-cell embeddings are stored
(a \code{num_cells} x \code{num_dim} matrix of cell embeddings across all latent dimensions).
If missing, cell embeddings are calculated using PCA. If provided, the \code{npcs} parameter is ignored.}

\item{assay}{Seurat assay to pull data for when using the cell counts. Defaults to the DefaultAssay.}

\item{raw_results}{Whether to return the raw results from \code{\link[=GetTiles.default]{GetTiles.default()}}.}

\item{tile.id.name}{Name of variable to store the tile IDs in the cell-level Seurat object.}

\item{reduction.name}{Name of dimensional reduction to store the aggregated tile-level embeddings
in the tile-level Seurat object.}

\item{graph.name}{Name of graph to store tile adjacency matrix in the tile-level Seurat object.}

\item{add.isolated.cells}{Whether to add back isolated single cells that were pruned out.
Only applies when \code{embeddings} are provided. Defaults to TRUE.}

\item{...}{
  Arguments passed on to \code{\link[=GetTiles.default]{GetTiles.default}}
  \describe{
    \item{\code{meta_vars_include}}{Names of columns in meta_data to include in \code{dmt$pts}.}
    \item{\code{group.by}}{Name of column in \code{meta_data} that provides the group IDs. Tessera tiles are
constructed separately for each group (which could be separate experimental samples or FOVs).}
    \item{\code{npcs}}{Number of PCs to compute for input to segmentation.}
    \item{\code{prune_thresh_quantile}}{Floating point value between 0 and 1, inclusive.
Quantile of edge length above which edges are pruned. Defaults to 0.95.}
    \item{\code{prune_min_cells}}{Minimum number of cells required for a connected
component of triangles to be kept. Defaults to 10.}
    \item{\code{prune_thresh}}{Edge length above which edges are pruned. If equal to NA,
then this value is ignored and \code{thresh_quantile} is used to compute
the threshold. Otherwise, if \code{thresh} is set, then \code{thresh_quantile}
is ignored. Defaults to NA.}
    \item{\code{smooth_distance}}{One of \code{c('none', 'euclidean', 'projected', 'constant')}.
If either \code{smooth_distance} or \code{smooth_similarity} is \code{'none'},
then no smoothing of the gradient field is conducted. Defaults to \code{'projected'}.}
    \item{\code{smooth_similarity}}{One of \code{c('none', 'euclidean', 'projected', 'constant')}.
If either \code{smooth_distance} or \code{smooth_similarity} is \code{'none'},
then no smoothing of the gradient field is conducted. Defaults to \code{'projected'}.}
    \item{\code{smooth_iter}}{Number of rounds of gradient smoothing.}
    \item{\code{max_npts}}{Maximum number of cells allowed in each tile during the
agglomerative clustering phase.}
    \item{\code{min_npts}}{Minimum number of cells allowed in each tile during the
agglomerative clustering phase.}
    \item{\code{alpha}}{Parameter for scoring transcriptional similarity between adjacent tiles during
the agglomerative clustering phase. For \code{alpha}, 0.2 = conservative merging, 2 = liberal merging.}
    \item{\code{future.globals.maxSize}}{Maximum allowed size (in bytes) of global variables that are exported to each parallel worker.
Increase this value if you get an error about global object size. Default is 8*1024^3 (8 GB).}
    \item{\code{consolidate}}{Whether to consolidate results from multiple groups into a single collection of
points and tiles (TRUE) or to return a list of separate results for each group (FALSE).}
    \item{\code{verbose}}{Whether to print progress messages for each stage of the segmentation pipeline.}
  }}
}
\value{
A List containing a pair of Seurat objects:
\enumerate{
\item \code{obj}: the input single-cell object whose meta.data has been updated with tile assignments for each cell
\item \code{tile_obj}: a Seurat object where each item represents an individual Tessera tile
}
}
\description{
Applies Tessera on a Seurat object
}
\seealso{
Other GetTiles: 
\code{\link{GetTiles}()},
\code{\link{GetTiles.default}()}
}
\concept{GetTiles}
