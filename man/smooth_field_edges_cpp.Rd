% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{smooth_field_edges_cpp}
\alias{smooth_field_edges_cpp}
\title{Bilateral / anisotropic filtering of gradient field}
\usage{
smooth_field_edges_cpp(
  from_pt,
  to_pt,
  field,
  edges_svd,
  coords,
  adj_idx,
  distance,
  similarity
)
}
\arguments{
\item{from_pt, to_pt}{A pair of \code{E}-length vectors indicating
the start and end points of each edge (0-indexed).}

\item{field}{A \code{2} x \code{D} x \code{E} array in column-major ordering
containing the spatial gradient in expression for each of
\code{D} latent variables at every edge.}

\item{edges_svd}{A list with elements \code{u} (\code{2} x \code{2} x \code{E}), \code{s} (\code{2} x \code{E}), and
\code{v} (\code{D} x \code{2} x \code{E}) containing the left singular vectors, singular values,
and right singular vectors for each edge.}

\item{coords}{A \code{N} x \code{2} matrix of cell coordinates.}

\item{adj_idx}{A \code{N} x \code{N} sparse adjacency matrix in dgCMatrix format,
containing the mapping from cells to edges. In particular, \code{adj_idx@x}
should store the 1-indexed edge indices corresponding to each cell-cell pair.
The adjacency matrix is assumed to be symmetric and have zeros on the diagonal.
Importantly, note that the stored edge indices are 1-indexed (\emph{not} 0-indexed here)
in order to avoid problems with R's sparse matrix representation.}

\item{distance}{Method for computing distance score in weighted average.
See description for details. Defaults to \code{'euclidean'}.}

\item{similarity}{Method for computing similarity score in weighted average.
See description for details. Defaults to \code{'euclidean'}.}
}
\value{
A \code{2} x \code{D} x \code{E} array in column-major ordering
containing the smoothed spatial gradient in expression for each of
\code{D} latent variables at every edge.
}
\description{
Gradient fields are smoothed using bilateral filtering,
in which the smoothed gradient of each edge is computed as
the weighted average of the neighboring edges' gradients, considering
both distance in space and also similarity in gradients.
}
